<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hezhuhui.github.io</id>
    <title>麦冬草</title>
    <updated>2020-07-04T12:58:27.034Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hezhuhui.github.io"/>
    <link rel="self" href="https://hezhuhui.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://hezhuhui.github.io/images/avatar.png</logo>
    <icon>https://hezhuhui.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 麦冬草</rights>
    <entry>
        <title type="html"><![CDATA[线程安全与锁优化]]></title>
        <id>https://hezhuhui.github.io/OVkf1CmaX/</id>
        <link href="https://hezhuhui.github.io/OVkf1CmaX/">
        </link>
        <updated>2020-07-04T12:56:12.000Z</updated>
        <content type="html"><![CDATA[<h2 id="线程安全">线程安全</h2>
<ol>
<li>线程安全概念：不管运行环境的调度或交替进行，最终的运行结果都是正确的。<br>
共享数据的线程安全从强到弱的分类：</li>
</ol>
<ul>
<li>不可变性：对象被构造出来后，内部的状态不会改变。基本数据类型；普通对象不会改变，或者状态被final修饰，如String，枚举类</li>
<li>绝对安全：不管运行环境如何，调用者不需要做额外的措施保护线程安全。</li>
<li>相对安全：一般意义上说的线程安全，对对象的单独操作是线程安全的。如线程安全类HashTable，Vector（不是任意环境下线程安全，利用多线程同时查询和删除，会出现线程不安全，需要额外的措施保证线程安全）</li>
<li>线程兼容：对象本身线程不安全，通过额外的措施可以保证线程安全。</li>
<li>线程对立: 无论使用任何措施都不能保证线程安全，例如suspend()和resume()【都不会释放锁，可能导致死锁】。</li>
</ul>
<ol start="2">
<li>线程安全的实现方式</li>
</ol>
<ul>
<li>互斥同步（synchronized悲观锁）:保证同一时刻只有一个线程访问共享数据，通过线程在同一个共享数据的互斥来实现线程之间的消息同步。<br>
    synchronized的锁对象：如果入参是对象，那么就是改对象的reference类型。没有入参，那么就是修饰的实例方法或类方法的实例对象或class对象。<br>
    synchronized的特性：可重入，不公平锁<br>
因为访问对象或对象方法时，会获取对象的锁；如果无锁或者锁为当前线程，则锁计数器加1,，相反解锁时，计数器减1，为0时释放锁。如果获取对象锁失败，线程会阻塞等待。<br>
由于计数器的存在，使得synchronized时可重入。<br>
缺点：会导致线程阻塞和唤醒(切入内核态)存在性能问题</li>
<li>非阻塞同步（CAS乐观锁）：先操作，如果冲突再补偿。<br>
<strong>实现方式</strong>：保证操作和冲突检测的操作是原子的，通过CAS实现。<br>
CAS是CPU指令通过锁总线的方式来支持冲突检测，是直接操作CPU不需要通过操作系统也就是没有通过操作系统内核态和用户态的切换，所以效率会比互斥同步高。<br>
CAS 操作包含三个操作数 —— 内存位置（V）、预期原值（A）和新值(B)。 如果内存位置的值与预期原值相匹配，那么处理器会自动将该位置值更新为新值 。否则，处理器不做任何操作。无论哪种情况，它都会在 CAS 指令之前返回该 位置的值。（在 CAS 的一些特殊情况下将仅返回 CAS 是否成功，而不提取当前 值。）CAS 有效地说明了“我认为位置 V 应该包含值 A；如果包含该值，则将 B 放到这个位置；否则，不要更改该位置，只告诉我这个位置现在的值即可。”<br>
<strong>CAS的ABA问题</strong>，通过对旧值添加版本号解决。<br>
<strong>CAS的缺点:</strong> 循环中，获取旧值，计算新值，再回写时，比较当前值和旧值是否一致，如果冲突很严重，会导致循环一致执行，降低效率。java可通过自适应自旋锁解决。</li>
</ul>
<ol start="3">
<li>无同步方案：数据线程私有，不需要线程之间进行同步，可实现线程安全。<br>
实现方式：<br>
<strong>可重入代码:</strong> 数据均是外部传入<br>
线程本地存储：ThreadLocal，线程私有ThreadLoacalMap，key为ThreadLocal<T>.threalLocalHashCode,value为线程私有的值。</li>
</ol>
<h2 id="锁优化">锁优化</h2>
<ol>
<li>自适应自旋锁<br>
利用CAS实现，根据线程上一次获取改对象的锁的成功程度进行循环次数。如果上一次成功获取对象的锁，则进行更长时间的循环。<br>
如果对象的锁，很少成功获取到，直接跳过CAS。</li>
<li>锁消除<br>
编译期堆数据流进行分析，发现该方法或对象不可能存在竞争，则会把锁消除。</li>
<li>锁粗化<br>
同一个对象零碎的加锁，会把锁范围扩到整个操作序列的外部。</li>
<li>轻量级锁</li>
</ol>
<ul>
<li>将对象头的MarkWord拷贝到栈帧(Lock Record)中，</li>
<li>然后利用CAS将MarkWord更新为指向栈帧(Lock Record), 然后标志位设为00(标识轻量锁)。<strong>如果更新失败，先检查MarkWord是否指向当前线程，是则直接进行同步块（先设置再判断是否为本线程）。</strong></li>
<li>MarkWork不是当前线程，则对象已被抢占，继续循环等待更新MarkWord，<em>超过2个线程竞争则升级为重量锁</em></li>
</ul>
<ol start="5">
<li>偏向锁：如果对象被其他线程获取，则一直偏向该线程，不需要进行同步操作。</li>
</ol>
<ul>
<li>高效的原因是只需要进行一次偏向锁，访问对象时，发现是偏向锁而且指向当前线程，直接进入同步块。相比轻量锁少了一次对MarkWord进行更新的操作。</li>
<li>操作步骤：<br>
锁对象第一次被获取时，MarkWord的标志位设为01（偏向锁），使用CAS把线程ID记录到对象的MarkWord（注意不是拷贝MarkWord到线程，再设置指针，检测是否获取锁时，直接查看对象头即可，虚拟机不需要做任何的操作）。<br>
<strong>一旦另外一个线程获取锁，理解变成无锁（01）或者升级为轻量级锁（00）</strong></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[滑动窗口]]></title>
        <id>https://hezhuhui.github.io/slidin-window/</id>
        <link href="https://hezhuhui.github.io/slidin-window/">
        </link>
        <updated>2020-07-04T12:31:24.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/hua-dong-chuang-kou-by-powcai/">滑动窗口题目汇总</a></p>
<h2 id="滑动窗口构成">滑动窗口构成</h2>
<p>滑动窗口问题一般3要素和1个求值条件:<br>
要素：</p>
<ul>
<li>快指针fast</li>
<li>慢指针slow</li>
<li>资源值(一般随着fast右移减少，slow左移增多)</li>
</ul>
<p>求值条件：</p>
<ul>
<li>最大或最小区间或长度</li>
</ul>
<h2 id="求最大值时">求最大值时:</h2>
<ol>
<li>满足条件前提下，fast要尽可能的扩展，记录资源消耗，扩展过程中slow不进行收缩；</li>
<li>一旦资源消耗完，用while进入slow右移来释放资源（使用while的原因是fast到最右边，slow需要继续右移完成循环）；</li>
<li>优化技巧【动态（尽可能消耗）+固定窗口（保持资源为0）】:<br>
因为fast尽可能扩展后，下一个元素必定是消耗K。slow右移动增加K，fast右移动消耗K，刚好抵消。<br>
所以当slow右移释放资源时，fast可以同时右移占用资源，即slow和fast同时移动，使得资源一直存有被消耗完的状态来减少循环次数。<br>
<a href="https://leetcode-cn.com/problems/max-consecutive-ones-iii/">动态+固定窗口求最大区间</a></li>
</ol>
<h2 id="求最小值时">求最小值时：</h2>
<ol>
<li>初始时，fast尽可能右移，</li>
<li>当滑动窗口内的数据满足条件的边界时，slow进行收缩，fast保持不变。</li>
<li>在slow收缩过程求最小值<br>
<a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">动态窗口求最小区间</a></li>
</ol>
<ul>
<li>求最小值通用代码模板如下:  *</li>
</ul>
<pre><code>//  定义退出条件
while(fast &gt;= slow &amp;&amp; fast &lt; len){
        //fast指针右移
        // 记录资源消耗，
        while(// 资源消耗完的条件){
            //slow右移
            //释放消耗的资源
            //记录fast和slow之间的长度，返回最小区间
        }
 }
        return min;
</code></pre>
<h2 id="解题技巧">解题技巧</h2>
<p>todo</p>
<h2 id="总结">总结</h2>
<ol>
<li>不管是求最大或最小问题，fast必定是满足条件的情况下尽可能往右移动。</li>
<li>slow的移动方式分最大和最小问题讨论</li>
</ol>
<ul>
<li>最大区间：<br>
slow左移停止的条件是fast可以发送右移（打破区间符合条件的情形），继续计算更多的结果，来比较获得最大区间。</li>
<li>最小区间：<br>
区间符合条件的情形前提，slow尽量右移，缩小区间来换取最小区间，同时取得fast右移来遍历更多的可能结构。</li>
</ul>
<ol start="3">
<li>slow右移（增加资源）在求最大区间和最小区间时有一个共同作用:打破区间符合条件的情形（资源剩余），使得fast继续右移（尽量消耗资源）以获得更多为遍历情形中可能出现的结果。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ 欢迎使用马克飞象]]></title>
        <id>https://hezhuhui.github.io/Introduction/</id>
        <link href="https://hezhuhui.github.io/Introduction/">
        </link>
        <updated>2020-07-04T09:37:17.000Z</updated>
        <content type="html"><![CDATA[<p><strong>马克飞象</strong>是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：</p>
<ul>
<li><strong>功能丰富</strong> ：支持高亮代码块、<em>LaTeX</em> 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；</li>
<li><strong>得心应手</strong> ：简洁高效的编辑器，提供<a href="http://maxiang.info/client_zh">桌面客户端</a>以及<a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop">离线Chrome App</a>，支持移动端 Web；</li>
<li><strong>深度整合</strong> ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。</li>
</ul>
<hr>
<p>[TOC]</p>
<h2 id="markdown简介">Markdown简介</h2>
<blockquote>
<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href="https://zh.wikipedia.org/wiki/Markdown">维基百科</a></p>
</blockquote>
<p>正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为<strong>粗体</strong>或者<em>斜体</em>，创建一个<a href="http://www.example.com">链接</a>或一个脚注<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。下面列举了几个高级功能，更多语法请按<code>Ctrl + /</code>查看帮助。</p>
<h3 id="代码块">代码块</h3>
<pre><code class="language-python">@requires_authorization
def somefunc(param1='', param2=0):
    '''A docstring'''
    if param1 &gt; param2: # interesting
        print 'Greater'
    return (param2 - param1 + 1) or None
class SomeClass:
    pass
&gt;&gt;&gt; message = '''interpreter
... prompt'''
</code></pre>
<h3 id="latex-公式">LaTeX 公式</h3>
<p>可以创建行内公式，例如 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Γ</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>!</mo><mspace width="1em"/><mi mathvariant="normal">∀</mi><mi>n</mi><mo>∈</mo><mi mathvariant="double-struck">N</mi></mrow><annotation encoding="application/x-tex">\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Γ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">∀</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord mathbb">N</span></span></span></span>。或者块级公式：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mfrac><mrow><mo>−</mo><mi>b</mi><mo>±</mo><msqrt><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi></mrow></msqrt></mrow><mrow><mn>2</mn><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.276389em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.590389em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.913389em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span></span></span><span style="top:-2.873389em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12661100000000003em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<h3 id="表格">表格</h3>
<table>
<thead>
<tr>
<th style="text-align:left">Item</th>
<th style="text-align:right">Value</th>
<th style="text-align:center">Qty</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Computer</td>
<td style="text-align:right">1600 USD</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td style="text-align:left">Phone</td>
<td style="text-align:right">12 USD</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td style="text-align:left">Pipe</td>
<td style="text-align:right">1 USD</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<h3 id="流程图">流程图</h3>
<pre><code class="language-flow">st=&gt;start: Start
e=&gt;end
op=&gt;operation: My Operation
cond=&gt;condition: Yes or No?

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
</code></pre>
<p>以及时序图:</p>
<pre><code class="language-sequence">Alice-&gt;Bob: Hello Bob, how are you?
Note right of Bob: Bob thinks
Bob--&gt;Alice: I am good thanks!
</code></pre>
<blockquote>
<p><strong>提示：<strong>想了解更多，请查看</strong>流程图</strong><a href="http://adrai.github.io/flowchart.js/">语法</a>以及<strong>时序图</strong><a href="http://bramp.github.io/js-sequence-diagrams/">语法</a>。</p>
</blockquote>
<h3 id="复选框">复选框</h3>
<p>使用 <code>- [ ]</code> 和 <code>- [x]</code> 语法可以创建复选框，实现 todo-list 等功能。例如：</p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-743764"><label class="task-list-item-label" for="task-item-743764"> 已完成事项</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8870228"><label class="task-list-item-label" for="task-item-8870228"> 待办事项1</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1529731"><label class="task-list-item-label" for="task-item-1529731"> 待办事项2</label></li>
</ul>
<blockquote>
<p><strong>注意：<strong>目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在</strong>马克飞象</strong>中修改 Markdown 原文才可生效。下个版本将会全面支持。</p>
</blockquote>
<h2 id="印象笔记相关">印象笔记相关</h2>
<h3 id="笔记本和标签">笔记本和标签</h3>
<p><strong>马克飞象</strong>增加了<code>@(笔记本)[标签A|标签B]</code>语法, 以选择笔记本和添加标签。 <strong>绑定账号后</strong>， 输入<code>(</code>自动会出现笔记本列表，请从中选择。</p>
<h3 id="笔记标题">笔记标题</h3>
<p><strong>马克飞象</strong>会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 <code>欢迎使用马克飞象</code>。</p>
<h3 id="快捷编辑">快捷编辑</h3>
<p>保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到<strong>马克飞象</strong>中打开并编辑该笔记。</p>
<blockquote>
<p>**注意：**目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。</p>
</blockquote>
<h3 id="数据同步">数据同步</h3>
<p><strong>马克飞象</strong>通过<strong>将Markdown原文以隐藏内容保存在笔记中</strong>的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。</p>
<blockquote>
<p><strong>隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。</strong></p>
</blockquote>
<h3 id="离线存储">离线存储</h3>
<p><strong>马克飞象</strong>使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过<code>文档管理</code>打开。</p>
<blockquote>
<p>**注意：**虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，<strong>请务必经常及时同步到印象笔记</strong>。</p>
</blockquote>
<h2 id="编辑器相关">编辑器相关</h2>
<h3 id="设置">设置</h3>
<p>右侧系统菜单（快捷键<code>Ctrl + M</code>）的<code>设置</code>中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。</p>
<h3 id="快捷键">快捷键</h3>
<p>帮助    <code>Ctrl + /</code><br>
同步文档    <code>Ctrl + S</code><br>
创建文档    <code>Ctrl + Alt + N</code><br>
最大化编辑器    <code>Ctrl + Enter</code><br>
预览文档 <code>Ctrl + Alt + Enter</code><br>
文档管理    <code>Ctrl + O</code><br>
系统菜单    <code>Ctrl + M</code></p>
<p>加粗    <code>Ctrl + B</code><br>
插入图片    <code>Ctrl + G</code><br>
插入链接    <code>Ctrl + L</code><br>
提升标题    <code>Ctrl + H</code></p>
<h2 id="关于收费">关于收费</h2>
<p><strong>马克飞象</strong>为新用户提供 10 天的试用期，试用期过后需要<a href="maxiang.info/vip.html">续费</a>才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。</p>
<h2 id="反馈与建议">反馈与建议</h2>
<ul>
<li>微博：<a href="http://weibo.com/u/2788354117">@马克飞象</a>，<a href="http://weibo.com/ggock" title="开发者个人账号">@GGock</a></li>
<li>邮箱：<a href="mailto:hustgock@gmail.com">hustgock@gmail.com</a></li>
</ul>
<hr>
<p>感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>这是一个示例脚注。请查阅 <a href="https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes">MultiMarkdown 文档</a> 关于脚注的说明。 <strong>限制：</strong> 印象笔记的笔记内容使用 <a href="https://dev.yinxiang.com/doc/articles/enml.php">ENML</a> 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致<code>脚注</code>和<code>TOC</code>无法正常点击。 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
</feed>